"""
Django settings for ms_back_end project.

Generated by 'django-admin startproject' using Django 2.2.4.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os
import sys

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '#10atvh90_p2^^$(0p*9h=+**+t$@%mio^7rq(c0=6*o2tgx+5'

# SECURITY WARNING: don't run with debug turned on in production!
if "runserver" in sys.argv:
  DEBUG = True

if "runserver" in sys.argv:
  ALLOWED_HOSTS = ["*"]
else:
  ALLOWED_HOSTS = ["www.mushfood.fr"]


# Application definition

INSTALLED_APPS = [
  'django.contrib.admin',
  'django.contrib.auth',
  'django.contrib.contenttypes',
  'django.contrib.sessions',
  'django.contrib.messages',
  'django.contrib.staticfiles',
  'mushfood',
  "rest_framework",
  "rest_framework.authtoken",
  "django_filters",
  "guardian",
  "corsheaders",
]

MIDDLEWARE = [
  'django.middleware.security.SecurityMiddleware',
  'django.contrib.sessions.middleware.SessionMiddleware',
  "corsheaders.middleware.CorsMiddleware",
  'django.middleware.common.CommonMiddleware',
  'django.middleware.csrf.CsrfViewMiddleware',
  'django.contrib.auth.middleware.AuthenticationMiddleware',
  'django.contrib.messages.middleware.MessageMiddleware',
  'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'ms_back_end.urls'

TEMPLATES = [
  {
    'BACKEND': 'django.template.backends.django.DjangoTemplates',
    'DIRS': [],
    'APP_DIRS': True,
    'OPTIONS': {
      'context_processors': [
        'django.template.context_processors.debug',
        'django.template.context_processors.request',
        'django.contrib.auth.context_processors.auth',
        'django.contrib.messages.context_processors.messages',
      ],
    },
  },
]

AUTHENTICATION_BACKENDS = (
  'django.contrib.auth.backends.ModelBackend',
  'guardian.backends.ObjectPermissionBackend',
)

WSGI_APPLICATION = 'ms_back_end.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases

DATABASES = {
  'default': {
    "ENGINE": "django.db.backends.sqlite3",
    "NAME": os.path.join(BASE_DIR,"MushfoodSQLiteDB")
  }
}

if "test" in sys.argv or "test_coverage" in sys.argv:
  DATABASES = {
    "default": {
      "ENGINE": "django.db.backends.sqlite3",
      "NAME": ":memory:",
      "TEST": {},
    }
  }


# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

REST_FRAMEWORK = {
  'DEFAULT_AUTHENTICATION_CLASSES': [
    'rest_framework.authentication.TokenAuthentication',
  ],
  'DEFAULT_FILTER_BACKENDS': ('django_filters.rest_framework.DjangoFilterBackend',),
  'TEST_REQUEST_DEFAULT_FORMAT': 'json'
}
if "runserver" in sys.argv:
  CORS_ORIGIN_WHITELIST = ["http://localhost:4200", ]


AUTH_PASSWORD_VALIDATORS = [
  {
    'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
  },
  {
    'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
  },
  {
    'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
  },
  {
    'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
  },
]

LOGIN_URL = "/connexion"
LOGIN_REDIRECT_URL = "/"

# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'fr-fr'
TIME_ZONE = 'UTC'

USE_I18N = False
USE_L10N = False
USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

STATICFILES_DIRS = [os.path.join(BASE_DIR, "static")]
STATIC_URL = '/static/'

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, "media")

LOGGING = {
  "version": 1,
  "disable_existing_loggers": True,
  "formatters": {
    "standard": {"format": "%(asctime)s [%(levelname)s] %(name)s: %(message)s"}
  },
  "handlers": {
    "default": {
      "level": "DEBUG",
      "class": "logging.handlers.RotatingFileHandler",
      "filename": "logs/mylog.log",
      "maxBytes": 1024 * 1024 * 5,  # 5 MB
      "backupCount": 5,
      "formatter": "standard",
    },
    "request_handler": {
      "level": "DEBUG",
      "class": "logging.handlers.RotatingFileHandler",
      "filename": "logs/django_request.log",
      "maxBytes": 1024 * 1024 * 5,  # 5 MB
      "backupCount": 5,
      "formatter": "standard",
    },
    "console": {
      "level": "DEBUG",
      "class": "logging.StreamHandler",
      "formatter": "standard",
    },
  },
  "root": {"handlers": ["default"], "level": "DEBUG"},
  "loggers": {
    "django": {"handlers": ["console"], "propagate": True},
    "django.request": {
      "handlers": ["request_handler"],
      "level": "DEBUG",
      "propagate": False,
    },
  },
}
